{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"MxLint Documentation","text":"<p>MxLint (Formerly Mendix-CLI) is a set of tools to help you build high quality Mendix apps. </p>"},{"location":"create-new-policy/","title":"Create new policy","text":""},{"location":"create-new-policy/#create-new-policy","title":"Create new policy","text":""},{"location":"create-new-policy/#rego-introduction","title":"Rego Introduction","text":"<p>Policies are expressed with the help of the powerful OPA Rego language. Rego is a declarative language that is purpose-built for expressing policies over complex hierarchical data structures. Rego is designed to be easy to read and write, even for non-programmers. Rego is a safe language that is decidable and has a small trusted computing base. Rego is also designed to be easy to integrate with other systems.</p>"},{"location":"create-new-policy/#policy-rule","title":"Policy rule","text":"<p>To create a new policy, you need to create a new Rego file in the <code>policies</code> directory. The file name should be in the format <code>XXX_YYY.rego</code> where <code>XXX</code> is the policy number and <code>YYY</code> is the policy name. For example, <code>001_0001_anonymous_disabled.rego</code>.</p> <p>The policy file should contain the following structure:</p> <pre><code># METADATA\n# scope: package\n# title: Business apps must always require login\n# description: No anonymous means every user must have valid login session or credentials\n# authors:\n# - Xiwen Cheng &lt;x@cinaq.com&gt;\n# custom:\n#  category: Security\n#  rulename: AnonymousDisabled\n#  severity: HIGH\n#  rulenumber: 001_0001\n#  remediation: Disable anonymous/guest access in Project Security\n#  input: Security$ProjectSecurity.yaml\npackage app.mendix.project_settings.anonymous_disabled\nimport rego.v1\nannotation := rego.metadata.chain()[1].annotations\n\ndefault allow := false\nallow if count(errors) == 0\n\nerrors contains error if {\n    input.EnableGuestAccess == true\n    error := sprintf(\"[%v, %v, %v] %v\",\n        [\n            annotation.custom.severity,\n            annotation.custom.category,\n            annotation.custom.rulenumber,\n            annotation.title,\n        ]\n    )\n}\n</code></pre> <ul> <li><code>METADATA</code> provide information about the policy. </li> <li><code>package</code> statement is used to define the policy package. </li> <li><code>allow</code> statement is used to define the conditions under which the policy is allowed. </li> <li><code>errors</code> statement is used to define the errors that are returned if the policy is not allowed.</li> <li><code>input</code> states which files are used as input for the policy. This can be a single file or an expression like <code>*/DomainModels$DomainModel.yaml</code> to match multiple files.</li> </ul>"},{"location":"create-new-policy/#policy-testing","title":"Policy testing","text":"<p>The best way to create a new policy is to copy an existing policy and modify it to suit your needs. There is also an accompanying test file for each policy that you can use to test your policy. The test file should be in the same directory as the policy file and should be named <code>XXX_YYY_test.rego</code>. For example, <code>001_0001_anonymous_disabled_test.rego</code>.</p> <pre><code>package app.mendix.project_settings.anonymous_disabled\nimport rego.v1\n\n# Test cases\ntest_allow if {\n    allow with input as {\"EnableGuestAccess\": false}\n}\ntest_no_allow if {\n    not allow with input as {\"EnableGuestAccess\": true}\n}\n</code></pre> <p>To test your policy, run the following command:</p> <pre><code>$ ./run-policy-tests.sh              \npolicies/001_project_settings/001_0001_anonymous_disabled_test.rego:\ndata.app.mendix.project_settings.anonymous_disabled.test_allow: PASS (3.031209ms)\ndata.app.mendix.project_settings.anonymous_disabled.test_no_allow: PASS (413.375\u00b5s)\n\npolicies/001_project_settings/001_0002_demo_users_disabled_test.rego:\ndata.app.mendix.project_settings.demo_users_disabled.test_allow: PASS (105.541\u00b5s)\ndata.app.mendix.project_settings.demo_users_disabled.test_no_allow: PASS (200.5\u00b5s)\n\npolicies/001_project_settings/001_0003_security_checks_test.rego:\ndata.app.mendix.project_settings.security_checks.test_allow: PASS (111.584\u00b5s)\ndata.app.mendix.project_settings.security_checks.test_no_allow_1: PASS (842.667\u00b5s)\ndata.app.mendix.project_settings.security_checks.test_no_allow_2: PASS (206.458\u00b5s)\n\npolicies/001_project_settings/001_0004_strong_password_test.rego:\ndata.app.mendix.project_settings.strong_password.test_allow: PASS (148.792\u00b5s)\ndata.app.mendix.project_settings.strong_password.test_no_allow_password_length: PASS (538.959\u00b5s)\ndata.app.mendix.project_settings.strong_password.test_no_allow_simple: PASS (286.916\u00b5s)\n\npolicies/002_domain_model/002_0001_number_of_entities_test.rego:\ndata.app.mendix.domain_model.number_of_entities.test_no_entities: PASS (134\u00b5s)\ndata.app.mendix.domain_model.number_of_entities.test_1_entity: PASS (194.666\u00b5s)\ndata.app.mendix.domain_model.number_of_entities.test_2_entities: PASS (187.334\u00b5s)\ndata.app.mendix.domain_model.number_of_entities.test_20_entities: PASS (1.375709ms)\n\npolicies/002_domain_model/002_0002_number_of_attributes_test.rego:\ndata.app.mendix.domain_model.number_of_attributes.test_no_entities: PASS (263.5\u00b5s)\ndata.app.mendix.domain_model.number_of_attributes.test_1_entity_1_attribute: PASS (519.416\u00b5s)\ndata.app.mendix.domain_model.number_of_attributes.test_2_entities: PASS (303.458\u00b5s)\ndata.app.mendix.domain_model.number_of_attributes.test_3_entities_1_empty: PASS (342.958\u00b5s)\ndata.app.mendix.domain_model.number_of_attributes.test_1_entity_40_attributes_not_allowed: PASS (1.294166ms)\ndata.app.mendix.domain_model.number_of_attributes.test_2_entity_40_attributes_1_empty_not_allowed: PASS (2.156042ms)\n--------------------------------------------------------------------------------\nPASS: 20/20\n</code></pre> <p>The test rego files contain examples so that it's easy to validate your policy actually works for different scenarios with purpose-crafted input data. The test script will run all the test files in the <code>policies</code> directory and output the results.</p> <p>Example input could be inspected in the <code>modelsource</code> directory. The <code>modelsource</code> directory contains the exported Mendix model in Yaml format. The <code>modelsource</code> directory is created when you run the <code>export-model</code> command.</p>"},{"location":"create-new-policy/#resources","title":"Resources","text":"<ul> <li>Rego language reference</li> <li>Rego playground</li> <li>Rego testing</li> <li>Rego best practices</li> <li>Style guide</li> </ul>"},{"location":"create-new-policy/#help","title":"Help","text":"<p>We understand Rego is not the easiest language to use. However, it is the perfect match due to its expressiveness. If you need help creating a new policy, please reach out to us at support@cinaq.com.</p>"},{"location":"microflow-transformation/","title":"Microflow transformation","text":""},{"location":"microflow-transformation/#microflow-transformation","title":"Microflow Transformation","text":"<p>This document outlines the thought process and approach on how to transform a program (or function if you want) from a graph like format to as-linear-as-possible textual representation.</p>"},{"location":"microflow-transformation/#mendix-microflows-are-not-dags","title":"Mendix Microflows are not DAG's","text":"<p>Mendix Microflows are in abstract form a graph structure. For those warry of graph-theory, at first sight most graphs are Directed Acyclic Graph (DAG). Because there is a starting point and multiple end states. There is a minor detail: it's possible to create loops using <code>Exclusive Split</code> and <code>Exclusive Merge</code> actions. These are comparable to defining <code>labels</code> and <code>goto</code> in more classical programming languages.</p>"},{"location":"microflow-transformation/#goto","title":"Goto","text":""},{"location":"TODO/Datamodel/10-Before-and-after-commit-actions-that-commits-the-object-it-self-with-events/","title":"Before and after commit actions that commits the object it self with events","text":"<p>Why Before and after commit actions should not commit the object itself with an event. The result is an infinite loop in the microflow.</p> <p></p> <p>How to fix Don't commit in BCo actions and commit without events in ACo actions.</p>"},{"location":"TODO/Datamodel/11-Entities-with-only-blank-xpath-access-rules/","title":"Entities with only blank xpath access rules","text":"<p>Why And entity should not only have blank access rules. Most of the times, this means the configuration is not correct, not secure. Even if you put the XPath on your forms, this will not be secure.</p> <p></p> <p>How to fix Make sure every entity has contrained access rules, and if not, correct them.</p>"},{"location":"TODO/Datamodel/3-Microflow-attributes-with-database-interaction/","title":"Microflow attributes with database interaction","text":"<p>Why Microflow attributes have a strong negative impact on performance, especially the attributes that have database interaction. If you managed to eliminate for example about 100 MF attributes on a medium/large application (model size +- 100MB) you will probably increase performance on load tests with factor 3-6.</p> <p></p> <p>How to fix Make the attributes 'stored' and calculate them in an event, or put the microflow attributes in a separate object.</p>"},{"location":"TODO/Datamodel/38-Delete-behaviour-in-place/","title":"Delete behaviour in place","text":"<p>Why To avoid data-corruption and floating data make sure there is delete behaviour on every association.</p> <p></p> <p>How to fix Model the delete behaviour. If there is no delete behaviour on purpose, please document it on the owner entity.</p>"},{"location":"TODO/Datamodel/39-Avoid-using-validation-rules/","title":"Avoid using validation rules","text":"<p>Why Validation rules on domain model level will give the users unexpected errors. For example, when importing data you maybe want to store invalid data temporary.</p> <p></p> <p>How to fix Remove datamodel validations and validate by microflows from UI. If you really need a validation rule, make sure to document it.</p>"},{"location":"TODO/Datamodel/4-More-than-2-microflow-attributes-within-one-domain-object/","title":"More than 2 microflow attributes within one domain object","text":"<p>Why Microflow attributes have a strong negative impact on performance, especially the attributes that have database interaction. If you managed to eliminate for example about 100 MF attributes on a medium/large application (model size +- 100MB) you will probably increase performance on load tests with factor 3-6.</p> <p></p> <p>How to fix Make the attributes 'stored' and calculate them in an event, or put the microflow attributes in a separate object.</p>"},{"location":"TODO/Datamodel/40-Localize-set-to-true-while-using-DateTime-as-date/","title":"Localize set to true while using DateTime as date","text":"<p>Why When you're only interested in a Date, don't use localization. A date is the same around the world but applying localization can result in different datevalues for your date attribute when looking at the date in different countries.</p> <p></p> <p>How to fix Change localization of the DateTime attribute to NO. If you have existing data in your database don't do this without intelligent conversion.</p>"},{"location":"TODO/Datamodel/41-Localize-set-to-false-when-using-DateTime-as-Date-%2B-time/","title":"Localize set to false when using DateTime as Date + time","text":"<p>Why When the time of a DateTime attribute is relevant, set Localize to YES. This ensures that the rendering on pages and in Retrieve activities goes well, e.g. when you compare the value to [%CurrentDatetime%].</p> <p></p> <p>How to fix Change localization of the DateTime attribute to YES. If you have existing data in your database, don't do this without intelligent conversion.</p>"},{"location":"TODO/Datamodel/42-Avoid-using-system-storage-objects-directly/","title":"Avoid using system storage objects directly","text":"<p>Why Always inherit for filedocuments and images. Never implement direct assocations to the System Domain Model, because of limits on the configuration of security.</p> <p></p> <p>How to fix Remove direct associations with the System Domain Model. Use inheritance instead (i.e. Generalization in the entity properties).</p>"},{"location":"TODO/Datamodel/43-Seperate-maintainance-and-super-user-rights/","title":"Seperate maintainance and super user rights","text":"<p>Why Always implement a separate Administrator account next to MxAdmin. The MxAdmin account is only for the App Development Company. </p> <p></p> <p>How to fix</p>"},{"location":"TODO/Datamodel/45-Don%27t-generate-related-objects-in-events/","title":"Don't generate related objects in events","text":"<p>Why Unwanted behaviour if the after create event of a parent object creates child objects when this is in use in nested dataviews. </p> <p>How to fix Use a microflow with a Get or Create pattern</p>"},{"location":"TODO/Datamodel/50-Make-use-of-SaveObjectX-microflows/","title":"Make use of SaveObjectX microflows","text":"<p>Why For every entity, there should in a microflow be only one action activity that commits the object. This includes any sub-microflows. Often, this action activity is at the end of the flow. </p> <p></p> <p>How to fix Remove Commit Object(s) activities if there are more than one in any flow, until there is only one. Preferably, the remaining one is at the end of the flow. </p>"},{"location":"TODO/Datamodel/52-Always-commit-with-events-or-comment/","title":"Always commit with events or comment","text":"<p>Why In principle, always commit with events. When it's necessary to commit without events, always add a comment explaining why events are avoided, and how integrity is guaranteed. A valid reason for not executing events can be performance. But an alternative must be implemented in the applicable flow. </p> <p></p> <p>How to fix In the Commit activity, select YES for \"With events\". In case of a valid reason for NO, add an annotation to the flow, elaborating the alternative for data integrity. </p>"},{"location":"TODO/Datamodel/53-Also-commit-nested-dataview-in-custom-save-buttons/","title":"Also commit nested dataview in custom save buttons","text":"<p>Why  custom save buttons when using nested dataviews via association (!) must be retrieved in save microflows so the objects can be saved.</p> <p></p> <p>How to fix Retrieve and save the objects by retrieve the associated objects.</p>"},{"location":"TODO/Datamodel/55-Apply-security-on-datamodel-instead-of-forms/","title":"Apply security on datamodel instead of forms","text":"<p>Why Security must be configured on every entity and never on user interfaces.</p> <p></p> <p>How to fix Set security on the domain model</p>"},{"location":"TODO/Datamodel/57-Don%27t-make-MxAdmin-super-user/","title":"Don't make MxAdmin super user","text":"<p>Why Do not expose the MxAdmin user/role to the whole datamodel.</p> <p>How to fix Configure a userrole with only the needed access to entities.</p>"},{"location":"TODO/Datamodel/59-Avoid-overlapping-module-role-security/","title":"Avoid overlapping module role security","text":"<p>Why</p> <p></p> <p>How to fix</p>"},{"location":"TODO/Datamodel/6-Entity-associatons-that-violates-naming-conventions%5D/","title":"Entity associatons that violates naming conventions]","text":"<p>Why An association name must have the following format: [] <p></p> <p>How to fix Rename the association so it always includes the parent and child domain names. This will make it a lot easier to autocomplete association names within microflows and to use it in modules such as Reporting for Mendix and Model Reflection.</p>"},{"location":"TODO/Datamodel/7-Multiple-inheritane/","title":"Multiple inheritane","text":"<p>Why When an entity inherits from an object that inherits itself from another entity. Multiple inheritance is strongly discouraged because of the negative performance side effects. Query complexity will increase a lot when showing datagrids of the generalizion because all access rules of the inheriting objects are applied in an OR constraint.</p> <p></p> <p>How to fix Refer with a one to one assocation to a seperate entity.</p>"},{"location":"TODO/Datamodel/9-Amount-of-cross-module-associations-_-3-to-another-module-%28check-per-module%21%29/","title":"Amount of cross module associations > 3 to another module (check per module!)","text":"<p>Why Module x is strongly dependent of module y. This will make it harder to reuse this module.</p> <p></p> <p>How to fix Consider to combine the modules or create a fa\u00e7ade within module y.</p>"},{"location":"TODO/Forms/12-Use-of-tables-within-dataview/","title":"Use of tables within dataview","text":"<p>Why Avoid using tables, since they are not responsive by character. For conditional formatting, use containers.</p> <p></p> <p>How to fix Use layout grids for multiple column dataviews.</p>"},{"location":"TODO/Forms/15-Form-x-doensn%27t-use-one-of-the-convention-layouts/","title":"Form x doensn't use one of the convention layouts","text":"<p>Why Avoid using a layout that isn't allowed by the convention. This will make it harder for your UI designer to design the layouts.</p> <p>How to fix Use one of the convention layouts appointed by your QA.</p>"},{"location":"TODO/Forms/16-Multiple-dataviews-with-same-datasource-microflow-within-one-form/","title":"Multiple dataviews with same datasource microflow within one form","text":"<p>Why Avoid unnecessary calls from your form to the Mendix Runtime. This will slow down page loading.</p> <p></p> <p>How to fix Restructure the form to avoid calling multiple times the same microflow.</p>"},{"location":"TODO/Forms/17-Multiple-nested-dataview-with-same-retrieve-by-association/","title":"Multiple nested dataviews with same retrieve by association","text":"<p>Why This will result in unnecessary calls from your form to the Mendix Runtime. This will slow down page loading.</p> <p></p> <p>How to fix Restructure the form to avoid calling multiple times the same association.</p>"},{"location":"TODO/Forms/18-4-column-layout-grid-widths-not-conform-convention/","title":"4 column layout grid widths not conform convention","text":"<p>Why Using different layout grid column structures will decrease application uniformity and therefore will negatively impact user experience.</p> <p></p> <p>How to fix Change the layout grid columns to 2;4;2;4 accoding to the conventions.</p>"},{"location":"TODO/Forms/19-Dataview-with-only-child-%3D-dataview/","title":"Dataview with only child = dataview","text":"<p>Why Multiple nested dataviews instead of using an N-deep path creates unnecessary calls your form to the Mendix Runtime. This will affect page loading performance negatively.</p> <p></p> <p>How to fix Put ... in the child dataview directly and retrieve over multiple associations.</p>"},{"location":"TODO/Forms/20-Button-uses-image-instead-of-icon/","title":"Button uses image instead of icon","text":"<p>Why Using images is a bit old school. Your User Experience will increase by using modern icons.</p> <p></p> <p>How to fix Change image type to Icon and select a Bootstrapper icon.</p>"},{"location":"TODO/Forms/21-Reference-selector-with-editable-Never/","title":"Reference selector with editable Never","text":"<p>Why In certain versions of Mendix a read-only reference selector will try to load the object list as well. This affects performance in a negative way.</p> <p></p> <p>How to fix Use a text box instead, set to read-only.</p>"},{"location":"TODO/Forms/51-Don%27t-save-for-UI-on-change-events/","title":"Don't save for UI on change events","text":"<p>Why When a microflow (e.g. OnChange) is called from a dataview, don't use a Commit activity. The user needs to be able to cancel by clicking the Cancel button.</p> <p></p> <p>How to fix Remove any Commit activities from microflows that are called from dataviews.</p>"},{"location":"TODO/Forms/65-Use-listviews-over-templategrids/","title":"Use listviews over templategrids","text":"<p>Why Listviews are responsive</p> <p></p> <p>How to fix</p>"},{"location":"TODO/Layout/63-Use-layout-containers-over-tables/","title":"Use layout grids over tables","text":"<p>Why A Layoutgrid renders better html and can be styled better.</p> <p></p> <p>How to fix Replace tables by layoutgrids.</p>"},{"location":"TODO/Layout/64-Use-nested-layout-%28no-duplication%29/","title":"Use nested layout (no duplication)","text":"<p>Why null</p> <p></p> <p>How to fix</p>"},{"location":"TODO/Microflows/22-Create-actions-of-system.Filedocument%2C-system.Image/","title":"Create actions of system.Filedocument, system.Image","text":"<p>Why Avoid creating filedocuments or images. Because security options on both objects are very limited.</p> <p></p> <p>How to fix Inherit always from system domain objects before using them. In that way you can configure your own security.</p>"},{"location":"TODO/Microflows/23-Result-of-retrieve-only-used-in-filter/","title":"Result of retrieve only used in filter","text":"<p>Why A filter is used on a retrieve action but the list is not used again. This can be a performance killer because Mendix is retrieving all your objects in memory because the filter is modeled a a separate action.</p> <p></p> <p>How to fix Add the filter to the xPath constraint property instead of filtering. Now you will directly get the list of objects that's needed.</p>"},{"location":"TODO/Microflows/24-Result-of-a-retrieve-multiple-times-used-in-aggregates-but-not-used-elsewhere/","title":"Result of a retrieve multiple times used in aggregates but not used elsewhere","text":"<p>Why Using one list retrieved from database within multiple aggregates has a negative performance impact. This is because Mendix Runtime will optimize a retrieve action + aggregate action to one aggregate query (e.g. SELECT SUM(..) FROM ..)) instead, retrieving the complete list in memory and a (Java) memory aggregation.</p> <p></p> <p>How to fix For each aggregate, add a new database retrieve action.  This will result in more activities but will be much faster.</p>"},{"location":"TODO/Microflows/25-Error-handling-where-the-first-action-doesn%E2%80%99t-equal-a-log-message/","title":"Error handling where the first action doesn\u2019t equal a log message","text":"<p>Why Error handling without logging will make it very hard to debug errors. You won't see anything in the log.</p> <p></p> <p>How to fix Add a log message in custom error handling. Make sure to check the 'Add latest stacktrace\" box as well.</p>"},{"location":"TODO/Microflows/26-Retrieve-by-association-combined-with-check-on-object-%21%3D-empty/","title":"Retrieve by association combined with check on object != empty","text":"<p>Why Retrieving the assocation will most of the times result in a database query. Just checking that a reference != empty can already be done without retrieving the associated object. This is because Mendix is quering the references by default.</p> <p></p> <p>How to fix Remove the retrieve by association and change your split to $mainobject/associationname != empty.</p>"},{"location":"TODO/Microflows/27-Bigger-than-50-activities/","title":"Bigger than 50 activities","text":"<p>Why Big microflows will result in big code units. This will have a negative impact on an ISO Maintainability score because the microflow is harder to analyze and maintain.</p> <p></p> <p>How to fix Divide the microflow into x parts.</p>"},{"location":"TODO/Microflows/29-Commit-actions-with-a-loop/","title":"Commit actions with a loop","text":"<p>Why Commiting objects within a loop will fire a SQL Update query for each iteration. This will decrease performance.</p> <p></p> <p>How to fix Consider committing objects outside the loop. Within the loop, add them to a list.</p>"},{"location":"TODO/Microflows/30-Generate-document-used/","title":"Generate document used","text":"<p>Why Generate Document is an outdated feature. Document templates created with the default template editor are hard to maintain and to style.</p> <p></p> <p>How to fix Consider using the Word Merge For Mendix module, the most powerfull solution for document generation with Mendix.</p>"},{"location":"TODO/Microflows/32-Complex-check/","title":"Complex check","text":"<p>Why Using a long if-then-else construction within one single split will make it harder to 'read' the microflow without having to click activities for details.</p> <p></p> <p>How to fix Please divide the split into multiple ones for read-ability and documentation.</p>"},{"location":"TODO/Microflows/46-Retrieve-first-instead-of-list-for-empty-checks/","title":"Retrieve first instead of list for empty checks","text":"<p>Why The use of retrieve action to check if an object exists should always retrieve only the first record instead of the whole list.</p> <p></p> <p>How to fix If the retrieve of the objects is followed by a test if the object != empty then set the retrieve to \"first\".</p>"},{"location":"TODO/Microflows/48-Don%27t-use-validation-feedback-within-event-microflows/","title":"Don't use validation feedback within event microflows","text":"<p>Why Don't use feedback activities in Event microflows (after create/after commit etc.)</p> <p>How to fix Use separate submicroflows and execute them in your microflows triggered by a user action</p>"},{"location":"TODO/Microflows/54-Use-batches-for-large-list-processing/","title":"Use batches for large list processing","text":"<p>Why Consider using batches when many objects are committed in one microflow. This can be done by adding objects to a list, and committing the list at the end of the microflow. Mendix will then optimize this. Depending on the executed functionality, it is best practice to work with lists of 2.000 to 10.000 objects maximum. The heavier the action being executed, the lower the maximum. Below is an example on how this can be implemented. </p> <p></p> <p>How to fix</p>"},{"location":"TODO/Modules/33-Entity-x-misses-folder/","title":"Entity x misses folder","text":"<p>Why For each entity there should be a folder to put the documents in.</p> <p></p> <p>How to fix Create a folder per persistent entity.</p>"},{"location":"TODO/Modules/34-Entity-x%27s-folder-missing-concention-subfolders/","title":"Entity x's folder missing concention subfolders","text":"<p>Why Based on the convention, each entity should have at least the following subfolders: Overviews, Selects, Dataviews, Resources. For microflows, create process folders to combine the microflows.</p> <p></p> <p>How to fix Create entity specific subfoldersfolders.</p>"},{"location":"TODO/Modules/36-Documents-within-module-root-that-are-not-of-type-folder/","title":"Documents within module root that are not of type folder","text":"<p>Why According to the conventions, documents should always be nested within folders.</p> <p></p> <p>How to fix ...</p>"},{"location":"TODO/Modules/37-App-store-module-changed/","title":"App store module changed","text":"<p>Why Please avoid changing app store modules, so you can more easily upgrade in a later phase.</p> <p></p> <p>How to fix</p>"},{"location":"policies/001_project_settings/001_0001_anonymous_disabled/","title":"Business apps must always require login","text":""},{"location":"policies/001_project_settings/001_0001_anonymous_disabled/#description","title":"Description","text":"<p>No anonymous means every user must have valid login session or credentials</p>"},{"location":"policies/001_project_settings/001_0001_anonymous_disabled/#remediation","title":"Remediation","text":"<p>Disable anonymous/guest access in Project Security</p>"},{"location":"policies/001_project_settings/001_0001_anonymous_disabled/#metadata","title":"Metadata","text":"<pre><code>authors:\n- Xiwen Cheng &lt;x@cinaq.com&gt;\ncategory: Security\ncustom: null\ninput: Security$ProjectSecurity.yaml\nrulename: AnonymousDisabled\nrulenumber: 4097\nscope: package\nseverity: HIGH\n</code></pre>"},{"location":"policies/001_project_settings/001_0001_anonymous_disabled/#test-script","title":"Test script","text":"<pre><code>package app.mendix.project_settings.anonymous_disabled\nimport rego.v1\n\n# Test cases\ntest_allow if {\n    allow with input as {\"EnableGuestAccess\": false}\n}\ntest_no_allow if {\n    not allow with input as {\"EnableGuestAccess\": true}\n}\n</code></pre>"},{"location":"policies/001_project_settings/001_0002_demo_users_disabled/","title":"Business apps should disable demo users","text":""},{"location":"policies/001_project_settings/001_0002_demo_users_disabled/#description","title":"Description","text":"<p>No demo users</p>"},{"location":"policies/001_project_settings/001_0002_demo_users_disabled/#remediation","title":"Remediation","text":"<p>Disable demo users in Project Security</p>"},{"location":"policies/001_project_settings/001_0002_demo_users_disabled/#metadata","title":"Metadata","text":"<pre><code>authors:\n- Xiwen Cheng &lt;x@cinaq.com&gt;\ncategory: Security\ncustom: null\ninput: Security$ProjectSecurity.yaml\nrulename: DemoUsersDisabled\nrulenumber: 4098\nscope: package\nseverity: HIGH\n</code></pre>"},{"location":"policies/001_project_settings/001_0002_demo_users_disabled/#test-script","title":"Test script","text":"<pre><code>package app.mendix.project_settings.demo_users_disabled\nimport rego.v1\n\n# Test cases\ntest_allow if {\n    allow with input as {\"EnableDemoUsers\": false}\n}\ntest_no_allow if {\n    not allow with input as {\"EnableDemoUsers\": true}\n}\n</code></pre>"},{"location":"policies/001_project_settings/001_0003_security_checks/","title":"Ensure security rules are active","text":""},{"location":"policies/001_project_settings/001_0003_security_checks/#description","title":"Description","text":"<p>Any serious app needs entity access security configured</p>"},{"location":"policies/001_project_settings/001_0003_security_checks/#remediation","title":"Remediation","text":"<p>Set Security check to production in Project Security</p>"},{"location":"policies/001_project_settings/001_0003_security_checks/#metadata","title":"Metadata","text":"<pre><code>authors:\n- Xiwen Cheng &lt;x@cinaq.com&gt;\ncategory: Security\ncustom: null\ninput: Security$ProjectSecurity.yaml\nrulename: SecurityChecks\nrulenumber: 4099\nscope: package\nseverity: HIGH\n</code></pre>"},{"location":"policies/001_project_settings/001_0003_security_checks/#test-script","title":"Test script","text":"<pre><code>package app.mendix.project_settings.security_checks\nimport rego.v1\n\n# Test cases\ntest_allow if {\n    allow with input as {\n        \"CheckSecurity\": true,\n        \"SecurityLevel\": \"CheckEverything\",\n    }\n}\ntest_no_allow_1 if {\n    not allow with input as {\n        \"CheckSecurity\": false,\n        \"SecurityLevel\": \"CheckEverything\",\n    }\n}\ntest_no_allow_2 if {\n    not allow with input as {\n        \"CheckSecurity\": true,\n        \"SecurityLevel\": \"unknown\",\n    }\n}\n</code></pre>"},{"location":"policies/001_project_settings/001_0004_strong_password/","title":"Strong password policy","text":""},{"location":"policies/001_project_settings/001_0004_strong_password/#description","title":"Description","text":"<p>Bruteforce is quite common. Ensure passwords are very strong.</p>"},{"location":"policies/001_project_settings/001_0004_strong_password/#remediation","title":"Remediation","text":"<p>Ensure minimum password length of at least 8 characters and must use all character classes.</p>"},{"location":"policies/001_project_settings/001_0004_strong_password/#metadata","title":"Metadata","text":"<pre><code>authors:\n- Xiwen Cheng &lt;x@cinaq.com&gt;\ncategory: Security\ncustom: null\ninput: Security$ProjectSecurity.yaml\npriority: 5\nrulename: StrongPasswordPolicy\nrulenumber: 4100\nscope: package\nseverity: HIGH\n</code></pre>"},{"location":"policies/001_project_settings/001_0004_strong_password/#test-script","title":"Test script","text":"<pre><code>package app.mendix.project_settings.strong_password\nimport rego.v1\n\n# Test cases\ntest_allow if {\n    allow with input as {\n        \"PasswordPolicySettings\": {\n            \"MinimumLength\": 9,\n            \"RequireDigit\": true,\n            \"RequireSymbol\": true,\n            \"RequireMixedCase\": true,\n        }\n    }\n}\n\ntest_no_allow_password_length if {\n    not allow with input as {\n        \"PasswordPolicySettings\": {\n            \"MinimumLength\": 3,\n            \"RequireDigit\": true,\n            \"RequireSymbol\": true,\n            \"RequireMixedCase\": true,\n        }\n    }\n}\n\ntest_no_allow_simple if {\n    not allow with input as {\n        \"PasswordPolicySettings\": {\n            \"MinimumLength\": 3,\n            \"RequireDigit\": false,\n            \"RequireSymbol\": true,\n            \"RequireMixedCase\": false,\n        }\n    }\n}\n</code></pre>"},{"location":"policies/002_domain_model/002_0001_number_of_entities/","title":"No more than 15 persistent entities within one domain model","text":""},{"location":"policies/002_domain_model/002_0001_number_of_entities/#description","title":"Description","text":"<p>The bigger the domain models, the harder they will be to maintain. It adds complexity to your security model as well. The smaller the modules, the easier to reuse.</p>"},{"location":"policies/002_domain_model/002_0001_number_of_entities/#remediation","title":"Remediation","text":"<p>Split domain model into multiple modules.</p>"},{"location":"policies/002_domain_model/002_0001_number_of_entities/#metadata","title":"Metadata","text":"<pre><code>authors:\n- Xiwen Cheng &lt;x@cinaq.com&gt;\ncategory: Maintainability\ncustom: null\ninput: '*/DomainModels$DomainModel.yaml'\nrulename: NumberOfEntities\nrulenumber: 8193\nscope: package\nseverity: MEDIUM\n</code></pre>"},{"location":"policies/002_domain_model/002_0001_number_of_entities/#test-script","title":"Test script","text":"<pre><code>package app.mendix.domain_model.number_of_entities\nimport rego.v1\n\n\n# Test data\nentity_attr_0 = {\n    \"Name\": \"Entity1\",\n}\n\n\ntwenty := numbers.range(1, 20)\nentities_20 = [ \n    { \"Name\": entity_attr_0.Name }  | n := twenty[_]\n]\n\n\n# Test cases\ntest_no_entities if {\n    allow with input as {\"Entities\": null}\n}\n\ntest_1_entity if {\n    allow with input as {\"Entities\": [entity_attr_0]}\n}\n\ntest_2_entities if {\n    allow with input as {\"Entities\": [entity_attr_0, entity_attr_0]}\n}\n\ntest_20_entities if {\n    not allow with input as {\"Entities\": entities_20}\n}\n</code></pre>"},{"location":"policies/002_domain_model/002_0002_number_of_attributes/","title":"No more that 35 attributes in an entity","text":""},{"location":"policies/002_domain_model/002_0002_number_of_attributes/#description","title":"Description","text":"<p>The bigger the entities, the slower your application will become when handling the data. This is because Mendix is using SELECT * queries a lot and will retrieve a lot of unnecessary data.</p>"},{"location":"policies/002_domain_model/002_0002_number_of_attributes/#remediation","title":"Remediation","text":"<p>Normalize your datamodel. Split your object into multiple objects. If the attributes really belong to each other in a one-to-one relation, just draw a one-to-one relation between the objects.</p>"},{"location":"policies/002_domain_model/002_0002_number_of_attributes/#metadata","title":"Metadata","text":"<pre><code>authors:\n- Xiwen Cheng &lt;x@cinaq.com&gt;\ncategory: Maintainability\ncustom: null\ninput: '*/DomainModels$DomainModel.yaml'\nrulename: NumberOfAttributes\nrulenumber: 8194\nscope: package\nseverity: MEDIUM\n</code></pre>"},{"location":"policies/002_domain_model/002_0002_number_of_attributes/#test-script","title":"Test script","text":"<pre><code>package app.mendix.domain_model.number_of_attributes\nimport rego.v1\n\n\n# Test data\nattribute1 = {\n    \"Name\": \"Attribute1\"\n}\n\nentity_attr_0 = {\n    \"Name\": \"Entity1\",\n    \"Attributes\": null,\n}\n\nentity_attr_1 = {\n    \"Name\": \"Entity1\",\n    \"Attributes\": [\n        attribute1\n    ]\n}\n\nforty := numbers.range(1, 40)\nattributes_40 = [ \n    { \"Name\": attribute1.Name }  | n := forty[_]\n]\n\nentity_1_attr_40 = {\n    \"Name\": \"Entity1\",\n    \"Attributes\": attributes_40,\n}\n\n\n# Test cases\ntest_no_entities if {\n    allow with input as {\"Entities\": null}\n}\n\ntest_1_entity_1_attribute if {\n    allow with input as {\"Entities\": [entity_attr_1]}\n}\n\ntest_2_entities if {\n    allow with input as {\"Entities\": [entity_attr_1, entity_attr_1]}\n}\n\ntest_3_entities_1_empty if {\n    allow with input as {\"Entities\": [entity_attr_1, entity_attr_1, entity_attr_0]}\n}\n\ntest_1_entity_40_attributes_not_allowed if {\n    not allow with input as {\"Entities\": [entity_1_attr_40]}\n}\n\ntest_2_entity_40_attributes_1_empty_not_allowed if {\n    not allow with input as {\"Entities\": [entity_1_attr_40, entity_1_attr_40, entity_attr_0]}\n}\n</code></pre>"},{"location":"policies/002_domain_model/002_0003_inherit_from_administration_account/","title":"Inherit from Administration.Account","text":""},{"location":"policies/002_domain_model/002_0003_inherit_from_administration_account/#description","title":"Description","text":"<p>There is no need to inherit from administration.account. Administration.account may simply be extended, this is not a system module. Avoid unnecessary inheritance as this has a negative effect on performance.</p>"},{"location":"policies/002_domain_model/002_0003_inherit_from_administration_account/#remediation","title":"Remediation","text":"<p>Inherit from system.user instead or adapt Administration.Account so it fits your needs.</p>"},{"location":"policies/002_domain_model/002_0003_inherit_from_administration_account/#metadata","title":"Metadata","text":"<pre><code>authors:\n- Xiwen Cheng &lt;x@cinaq.com&gt;\ncategory: Performance\ncustom: null\ninput: '*/DomainModels$DomainModel.yaml'\nrulename: AvioidInheritanceFromAdministrationAccount\nrulenumber: 8195\nscope: package\nseverity: MEDIUM\n</code></pre>"},{"location":"policies/002_domain_model/002_0003_inherit_from_administration_account/#test-script","title":"Test script","text":"<pre><code>package app.mendix.domain_model.inherit_from_administration_account\nimport rego.v1\n\n\n# Test data\nentity_negative = {\n    \"Name\": \"Entity1\",\n    \"MaybeGeneralization\": {\n        \"Type\": \"DomainModels$Generalization\",\n        \"Generalization\": \"System.FileDocument\"\n    }\n}\n\nentity_positive = {\n    \"Name\": \"Entity2\",\n    \"MaybeGeneralization\": {\n        \"Type\": \"DomainModels$Generalization\",\n        \"Generalization\": \"Administration.Account\"\n    }\n}\n\n\nentities_mixed = [entity_negative, entity_positive]\n\n\n# Test cases\ntest_no_entities if {\n    allow with input as {\"Entities\": null}\n}\n\ntest_entity_negative if {\n    allow with input as {\"Entities\": [entity_negative]}\n}\n\ntest_entity_positive if {\n    not allow with input as {\"Entities\": [entity_positive]}\n}\n\ntest_entities_mixed if {\n    not allow with input as {\"Entities\": entities_mixed}\n}\n</code></pre>"},{"location":"policies/002_domain_model/002_0004_inherit_from_non_system/","title":"Inherit from non System module is discouraged","text":""},{"location":"policies/002_domain_model/002_0004_inherit_from_non_system/#description","title":"Description","text":"<p>Inheritance, except from system module, is strongly discouraged because of the negative performance side effects.</p>"},{"location":"policies/002_domain_model/002_0004_inherit_from_non_system/#remediation","title":"Remediation","text":"<p>Instead of inheritance, just use separate objects which are associated to the main object. As an alternative, you can add the child\u2019s attributes to the super entity and add an ObjectType enumeration.</p>"},{"location":"policies/002_domain_model/002_0004_inherit_from_non_system/#metadata","title":"Metadata","text":"<pre><code>authors:\n- Xiwen Cheng &lt;x@cinaq.com&gt;\ncategory: Performance\ncustom: null\ninput: '*/DomainModels$DomainModel.yaml'\nrulename: AvoidInheritanceFromNonSystem\nrulenumber: 8196\nscope: package\nseverity: MEDIUM\n</code></pre>"},{"location":"policies/002_domain_model/002_0004_inherit_from_non_system/#test-script","title":"Test script","text":"<pre><code>package app.mendix.domain_model.inherit_from_non_system\nimport rego.v1\n\n\n# Test data\nentity_negative = {\n    \"Name\": \"Entity1\",\n    \"MaybeGeneralization\": {\n        \"Type\": \"DomainModels$Generalization\",\n        \"Generalization\": \"System.FileDocument\"\n    }\n}\n\nentity_positive = {\n    \"Name\": \"Entity2\",\n    \"MaybeGeneralization\": {\n        \"Type\": \"DomainModels$Generalization\",\n        \"Generalization\": \"Administration.Account\"\n    }\n}\n\n\nentities_mixed = [entity_negative, entity_positive]\n\n\n# Test cases\ntest_no_entities if {\n    allow with input as {\"Entities\": null}\n}\n\ntest_entity_negative if {\n    allow with input as {\"Entities\": [entity_negative]}\n}\n\ntest_entity_positive if {\n    not allow with input as {\"Entities\": [entity_positive]}\n}\n\ntest_entities_mixed if {\n    not allow with input as {\"Entities\": entities_mixed}\n}\n</code></pre>"},{"location":"policies/002_domain_model/002_0005_avoid_system_entity_association/","title":"Avoid using system storage objects directly","text":""},{"location":"policies/002_domain_model/002_0005_avoid_system_entity_association/#description","title":"Description","text":"<p>Always inherit for filedocuments and images. Never implement direct assocations to the System Domain Model, because of limits on the configuration of security.</p>"},{"location":"policies/002_domain_model/002_0005_avoid_system_entity_association/#remediation","title":"Remediation","text":"<p>Remove direct associations with the System Domain Model. Use inheritance instead (i.e. Generalization in the entity properties).</p>"},{"location":"policies/002_domain_model/002_0005_avoid_system_entity_association/#metadata","title":"Metadata","text":"<pre><code>authors:\n- Xiwen Cheng &lt;x@cinaq.com&gt;\ncategory: Security\ncustom: null\ninput: '*/DomainModels$DomainModel.yaml'\nrulename: AvoidSystemEntityAssociation\nrulenumber: 8197\nscope: package\nseverity: HIGH\n</code></pre>"},{"location":"policies/002_domain_model/002_0005_avoid_system_entity_association/#test-script","title":"Test script","text":"<pre><code>package app.mendix.domain_model.avoid_system_entity_association\nimport rego.v1\n\n\n# Test data\nnegative = {\n    \"Name\": \"HELLO_THERE1\",\n    \"Child\": \"SomeModule.FileDocument\",\n}\n\npositive = {\n    \"Name\": \"HELLO_THERE2\",\n    \"Child\": \"System.FileDocument\",\n}\n\n\n# Test cases\n\ntest_no_cross_associations if {\n    allow with input as {\"CrossAssociations\": null}\n}\n\ntest_negative if {\n    allow with input as {\"CrossAssociations\": [negative]}\n}\n\ntest_positive if {\n    not allow with input as {\"CrossAssociations\": [positive]}\n}\n\ntest_mixed if {\n    not allow with input as {\"CrossAssociations\": [negative, positive]}\n}\n</code></pre>"},{"location":"policies/002_domain_model/002_0006_avoid_too_many_virtual_attributes/","title":"Too many Microflow attributes (virtual attributes) inside of an entity","text":""},{"location":"policies/002_domain_model/002_0006_avoid_too_many_virtual_attributes/#description","title":"Description","text":"<p>Too many Microflow attributes (virtual attributes) inside of an entity will cause performance issues.</p>"},{"location":"policies/002_domain_model/002_0006_avoid_too_many_virtual_attributes/#remediation","title":"Remediation","text":"<p>Optimize the number of virtual attributes inside of an entity. Reduce to 10 or less.</p>"},{"location":"policies/002_domain_model/002_0006_avoid_too_many_virtual_attributes/#metadata","title":"Metadata","text":"<pre><code>authors:\n- Xiwen Cheng &lt;x@cinaq.com&gt;\ncategory: Performance\ncustom: null\ninput: '*/DomainModels$DomainModel.yaml'\nrulename: AvoidTooManyVirtualAttributes\nrulenumber: 8198\nscope: package\nseverity: MEDIUM\n</code></pre>"},{"location":"policies/002_domain_model/002_0006_avoid_too_many_virtual_attributes/#test-script","title":"Test script","text":"<pre><code>package app.mendix.domain_model.avoid_too_many_virtual_attributes\n\nimport rego.v1\n\n\n# Test data\n\n\nattr_0 := {\n          \"$Type\": \"DomainModels$Attribute\",\n          \"Name\": \"VA_age\",\n          \"Value\": {\n            \"$Type\": \"DomainModels$CalculatedValue\"\n          }\n}\n\n\ntwenty := numbers.range(1, 20)\nattr_20 = [ \n    { \"Name\": attr_0.Name, \"Value\": attr_0.Value }  | n := twenty[_]\n]\n\npositive := {\n  \"Entities\": [\n    {\n      \"$Type\": \"DomainModels$EntityImpl\",\n      \"Attributes\": [\n        {\n          \"$Type\": \"DomainModels$Attribute\",\n          \"Name\": \"VA_age\",\n          \"Value\": {\n            \"$Type\": \"DomainModels$CalculatedValue\"\n          }\n        },\n        {\n          \"$Type\": \"DomainModels$Attribute\",\n          \"Name\": \"Year\",\n          \"Value\": {\n            \"$Type\": \"DomainModels$StoredValue\"\n          }\n        }\n      ],\n      \"Name\": \"Bike\"\n    }\n  ]\n}\n\nnegative := {\n  \"Entities\": [\n    {\n      \"$Type\": \"DomainModels$EntityImpl\",\n      \"Attributes\": attr_20,\n      \"Name\": \"Bike\"\n    }\n  ]\n}\n\n# Test cases\n\ntest_positive if {\n    allow with input as positive\n}\n\ntest_negative if {\n    not allow with input as negative\n}\n</code></pre>"},{"location":"policies/002_domain_model/002_0007_avoid_using_validation_rules/","title":"Avoid using validation rules for domain model.","text":""},{"location":"policies/002_domain_model/002_0007_avoid_using_validation_rules/#description","title":"Description","text":"<p>Validation rules on domain model level will give the users unexpected errors.</p>"},{"location":"policies/002_domain_model/002_0007_avoid_using_validation_rules/#remediation","title":"Remediation","text":"<p>Remove datamodel validation rules.</p>"},{"location":"policies/002_domain_model/002_0007_avoid_using_validation_rules/#metadata","title":"Metadata","text":"<pre><code>authors:\n- Viktor Berlov &lt;viktor@cinaq.com&gt;\ncategory: Maintainability\ncustom: null\ninput: '*/DomainModels$DomainModel.yaml'\nrulename: AvoidUsingValidationRules\nrulenumber: 8199\nscope: package\nseverity: MEDIUM\n</code></pre>"},{"location":"policies/002_domain_model/002_0007_avoid_using_validation_rules/#test-script","title":"Test script","text":"<pre><code>package app.mendix.domain_model.avoid_using_validation_rules\n\nimport rego.v1\n\n\n# Test data\n\npositive := {\n  \"Entities\": [\n    {\n      \"ValidationRules\": [],\n      \"Name\": \"Bike\"\n    }\n  ]\n}\n\nnegative := {\n  \"Entities\": [\n    {\n      \"ValidationRules\": [\n        {\n          \"$Type\": \"DomainModels$ValidationRule\",\n          \"Attribute\": \"MyFirstModule.Bike.Name\",\n          \"Message\": {\n            \"$Type\": \"Texts$Text\",\n            \"Items\": [\n              {\n                \"$Type\": \"Texts$Translation\",\n                \"LanguageCode\": \"en_US\",\n                \"Text\": \"Not a good name\"\n              }\n            ]\n          },\n          \"RuleInfo\": {\n            \"$Type\": \"DomainModels$EqualsToRuleInfo\",\n            \"EqualsToAttribute\": \"\",\n            \"UseValue\": true,\n            \"Value\": \"admin\"\n          }\n        }\n      ],\n      \"Name\": \"Bike\"\n    }\n  ]\n}\n\n# Test cases\n\ntest_positive if {\n    allow with input as positive\n}\n\ntest_negative if {\n    not allow with input as negative\n}\n</code></pre>"},{"location":"policies/003_modules/003_0001_number_of_modules/","title":"More than 20 modules in project","text":""},{"location":"policies/003_modules/003_0001_number_of_modules/#description","title":"Description","text":"<p>The bigger the application, the harder to maintain.</p>"},{"location":"policies/003_modules/003_0001_number_of_modules/#remediation","title":"Remediation","text":"<p>Consider a multi-app stategy to avoid creating one big (unmaintainable) monstrous application.</p>"},{"location":"policies/003_modules/003_0001_number_of_modules/#metadata","title":"Metadata","text":"<pre><code>authors:\n- Xiwen Cheng &lt;x@cinaq.com&gt;\ncategory: Maintainability\ncustom: null\ninput: Metadata.yaml\nrulename: NumberOfModules\nrulenumber: 12289\nscope: package\nseverity: MEDIUM\n</code></pre>"},{"location":"policies/003_modules/003_0001_number_of_modules/#test-script","title":"Test script","text":"<pre><code>package app.mendix.modules.number_of_modules\nimport rego.v1\n\n\n# Test data\nmodule = {\n    \"Name\": \"Module\",\n    \"Attributes\": {\n        \"FromAppStore\": false,\n    }\n}\n\n\nthirty := numbers.range(1, 30)\nmodules_30 = [ \n    module | n := thirty[_]\n]\n\n\n# Test cases\ntest_empty if {\n    allow with input as {\"Modules\": null}\n}\n\ntest_1_module if {\n    allow with input as {\"Modules\": [module]}\n}\n\ntest_2_modules if {\n    allow with input as {\"Modules\": [module, module]}\n}\n\ntest_30_modules if {\n    not allow with input as {\"Modules\": modules_30}\n}\n</code></pre>"},{"location":"policies/004_pages/004_0001_inline_style_property_used/","title":"Inline style property used","text":""},{"location":"policies/004_pages/004_0001_inline_style_property_used/#description","title":"Description","text":"<p>Avoid using the style property, because this will make the life of your UI designer a lot more complicated. It will be harder to overrule styles from CSS file level.</p>"},{"location":"policies/004_pages/004_0001_inline_style_property_used/#remediation","title":"Remediation","text":"<p>Use generic classes instead, defined by the theme.</p>"},{"location":"policies/004_pages/004_0001_inline_style_property_used/#metadata","title":"Metadata","text":"<pre><code>authors:\n- Xiwen Cheng &lt;x@cinaq.com&gt;\ncategory: Maintainability\ncustom: null\ninput: '*/**/*$Page.yaml'\nrulename: InlineStylePropertyUsed\nrulenumber: 16385\nscope: package\nseverity: MEDIUM\n</code></pre>"},{"location":"policies/004_pages/004_0001_inline_style_property_used/#test-script","title":"Test script","text":"<pre><code>package app.mendix.pages.inline_style_property_used\nimport rego.v1\n\n\n# Test data\nform_simple = {\n    \"$Type\": \"Forms$Page\",\n    \"Name\": \"Page1\",\n    \"Appearance\": {\n        \"$Type\": \"Forms$Appearance\",\n        \"Class\": \"\",\n        \"DesignProperties\": null,\n        \"DynamicClasses\": \"\",\n        \"Style\": \"\",\n    },\n}\nform_simple_negative = {\n    \"$Type\": \"Forms$Page\",\n    \"Name\": \"Page1\",\n    \"Appearance\": {\n        \"$Type\": \"Forms$Appearance\",\n        \"Class\": \"\",\n        \"DesignProperties\": null,\n        \"DynamicClasses\": \"\",\n        \"Style\": \"color: red;\",\n    },\n}\n\nform_nested = {\n    \"Name\": \"Page1\",\n    \"FormCall\": {\n        \"Arguments\": [\n            {\n                \"Widgets\": [\n                    {\n                        \"$Type\": \"Forms$LayoutGrid\",\n                        \"Name\": \"layoutGrid2\",\n                        \"Rows\": [\n                            {\n                                \"$Type\": \"Forms$LayoutGridRow\",\n                                \"Columns\": [\n                                    {\n                                        \"$Type\": \"Forms$LayoutGridColumn\",\n                                        \"Appearance\": {\n                                            \"$Type\": \"Forms$Appearance\",\n                                            \"Class\": \"\",\n                                            \"DesignProperties\": null,\n                                            \"DynamicClasses\": \"\",\n                                            \"Style\": \"\",\n                                        }\n                                    },\n                                ],\n                            },\n                        ],\n                    },\n                ],\n            },\n        ],\n    },\n}\n\nform_nested_negative = {\n    \"Name\": \"Page1\",\n    \"FormCall\": {\n        \"Arguments\": [\n            {\n                \"Widgets\": [\n                    {\n                        \"$Type\": \"Forms$LayoutGrid\",\n                        \"Name\": \"layoutGrid2\",\n                        \"Rows\": [\n                            {\n                                \"$Type\": \"Forms$LayoutGridRow\",\n                                \"Columns\": [\n                                    {\n                                        \"$Type\": \"Forms$LayoutGridColumn\",\n                                        \"Appearance\": {\n                                            \"$Type\": \"Forms$Appearance\",\n                                            \"Class\": \"\",\n                                            \"DesignProperties\": null,\n                                            \"DynamicClasses\": \"\",\n                                            \"Style\": \"color: orange;\",\n                                        }\n                                    },\n                                ],\n                            },\n                        ],\n                    },\n                ],\n            },\n        ],\n    },\n}\n\n\n\n# Test cases\ntest_simple if {\n    allow with input as form_simple\n}\n\ntest_simple_negative if {\n    not allow with input as form_simple_negative\n}\n\ntest_nested if {\n    allow with input as form_nested\n}\n\ntest_nested_negative if {\n    not allow with input as form_nested_negative\n}\n</code></pre>"},{"location":"policies/005_microflows/005_0001_empty_string_check_not_complete/","title":"Empty String check not complete","text":""},{"location":"policies/005_microflows/005_0001_empty_string_check_not_complete/#description","title":"Description","text":"<p>Technically, there is a difference between empty and \"\". Make sure to check them both.</p>"},{"location":"policies/005_microflows/005_0001_empty_string_check_not_complete/#remediation","title":"Remediation","text":"<p>Always check a string for empty based on != empty and != \"\". The first one equals database NULL value, the latter one indicates a truncated string.</p>"},{"location":"policies/005_microflows/005_0001_empty_string_check_not_complete/#metadata","title":"Metadata","text":"<pre><code>authors:\n- Xiwen Cheng &lt;x@cinaq.com&gt;\ncategory: Error\ncustom: null\ninput: '*/**/*$Microflow.yaml'\nrulename: EmptyStringCheckNotComplete\nrulenumber: 20481\nscope: package\nseverity: MEDIUM\n</code></pre>"},{"location":"policies/005_microflows/005_0001_empty_string_check_not_complete/#test-script","title":"Test script","text":"<pre><code>package app.mendix.microflows.empty_string_check_not_complete\nimport rego.v1\n\n\n# Test data\nmicroflow_good = {\n    \"$Type\": \"Microflow$Page\",\n    \"Name\": \"mf1\",\n    \"ObjectCollection\": {\n        \"$Type\": \"Microflows$MicroflowObjectCollection\",\n        \"Objects\": [\n            {\n                \"$Type\": \"Microflows$ExclusiveSplit\",\n                \"SplitCondition\": {\n                    \"$Type\": \"Microflows$ExpressionSplitCondition\",\n                    \"Expression\": \"$Variable != empty and $Variable != ''\",\n                },\n            },\n        ],\n    },\n}\n\nmicroflow_bad = {\n    \"$Type\": \"Microflow$Page\",\n    \"Name\": \"mf1\",\n    \"ObjectCollection\": {\n        \"$Type\": \"Microflows$MicroflowObjectCollection\",\n        \"Objects\": [\n            {\n                \"$Type\": \"Microflows$ExclusiveSplit\",\n                \"SplitCondition\": {\n                    \"$Type\": \"Microflows$ExpressionSplitCondition\",\n                    \"Expression\": \"$Variable != ''\",\n                },\n            },\n        ],\n    },\n}\n\n# Test cases\ntest_simple if {\n    allow with input as microflow_good\n}\n\ntest_simple_negative if {\n    not allow with input as microflow_bad\n}\n</code></pre>"}]}